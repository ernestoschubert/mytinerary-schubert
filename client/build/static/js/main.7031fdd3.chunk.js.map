{"version":3,"sources":["redux/actions/usersActions.js","components/Dropdown.js","components/Header.js","components/Footer.js","components/Carouselswiper.js","components/SliderRender.js","pages/Home.js","components/Loader.js","redux/actions/citiesActions.js","pages/Cities.js","components/Activities.js","redux/actions/itinerariesActions.js","components/Comments.js","components/Alert.js","components/Itineraries.js","pages/City.js","components/PasswordToggle.js","pages/SignIn.js","pages/SignUp.js","components/ScrollToTop.js","utils/withRouter.js","App.js","redux/reducers/citiesReducer.js","redux/reducers/itinerariesReducer.js","redux/reducers/usersReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["axios","require","usersActions","signUpUser","newUser","dispatch","getState","a","post","response","data","success","type","payload","console","error","signInUser","logInUser","logOut","signInUserLS","token","get","headers","Authorization","userCheck","firstName","lastName","userImg","_id","getCountries","mapDispatchToProps","connect","state","users","props","imgUser","img","style","padding","backgroundColor","borderRadius","src","className","alt","Alert","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","NavDropdown","title","id","menuVariant","Item","as","Link","to","eventKey","onClick","e","preventDefault","fire","icon","onLogOut","Header","Footer","href","target","SwiperCore","use","Navigation","Pagination","Scrollbar","A11y","Autoplay","CarouselSwiper","sliders","cities","map","city","index","backgroundImage","backgroundSize","country","spaceBetween","slidesPerView","navigation","autoplay","delay","disableOnInteraction","pagination","clickable","scrollbar","draggable","SliderRender","Home","width","Button","variant","React","Component","Loader","disabled","Spinner","animation","size","role","citiesActions","getCities","res","getFiltered","getCity","Cities","this","citiesFiltered","placeholder","onChange","value","length","item","citiesArray","Activities","activities","activity","activityTitle","activityImg","itinerariesActions","getCityItineraries","getItineraryActivities","likeItinerary","put","sendComment","commentInfo","deleteComment","IDs","delete","editComment","itineraryId","configure","userLogged","user","itineraryComments","useState","allComments","setAllComments","commentContent","setCommentContent","isEditingComment","setIsEditingComment","editedComment","setEditedComment","commentBeingEdited","setCommentBeingEdited","userId","comment","deleteSingleComment_","deleteSingleComment","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","sendEditedComment","i","userName","commentId","newComment","faPaperPlane","useParams","itinerary","likes","price","duration","hastags","comments","viewMoreLess","setViewMoreLess","setActivities","like","setLike","itinerariesLikes","setItinerariesLikes","likeOrDislike","includes","handlerActivities","getActivities","repeat","hastag","Accordion","defaultActiveKey","Body","City","params","undefined","itine","itineraries","PasswordToggle","visible","setVisible","hideViewIcon","inputType","placeholderText","email","password","setLogInUser","inputHandler","name","responseGoogle","googleUser","profileObj","googleId","google","catch","log","autoComplete","Object","values","some","infoUser","onSubmit","clientId","buttonText","onSuccess","onFailure","cookiePolicy","allCountries","useEffect","setNewUser","errorInput","setErrorInput","givenName","familyName","imageUrl","googleAccount","defaultValue","errors","messageError","path","message","Child","ScrollToTop","pathname","useLocation","window","scrollTo","CityWithoutProps","location","navigate","useNavigate","localStorage","getItem","element","citiesReducer","action","filtered","filter","toLowerCase","trim","startsWith","itinerariesReducer","usersReducer","setItem","clear","rootReducer","combineReducers","reduxStore","createStore","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.7031fdd3.chunk.js","sourcesContent":["const axios = require('axios');\r\n\r\n\r\nconst usersActions = {\r\n\r\n    signUpUser: (newUser) => {\r\n        return async(dispatch, getState) => {    \r\n            const response = await axios.post('https://mytinerary-schubert.herokuapp.com/api/users/signup', {...newUser})\r\n            if(response.data.success) {\r\n                dispatch({type:'LOG_USER', payload: response.data.response});\r\n            } else {\r\n                console.error(response)\r\n            }\r\n        }\r\n    },\r\n    signInUser: (logInUser) => {\r\n        return async(dispatch, getState) => {\r\n            const response = await axios.post('https://mytinerary-schubert.herokuapp.com/api/users/signin', {...logInUser})\r\n            if(response.data.success){\r\n                dispatch({type: 'LOG_USER', payload: response.data.response})\r\n            } else {\r\n                console.error(response.data.response)\r\n            }\r\n            return response\r\n        }\r\n    },\r\n    logOut: () => {\r\n        return async (dispatch, getState) => {\r\n            dispatch({type: \"LOG_OUT\"})\r\n        }\r\n    },\r\n    signInUserLS: (token) => {\r\n        return async (dispatch, getState) => {\r\n            try{\r\n                const response = await axios.get('https://mytinerary-schubert.herokuapp.com/api/verifytoken', {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        }\r\n                })\r\n                const userCheck = {\r\n                    token,\r\n                    firstName:response.data.firstName, \r\n                    lastName: response.data.lastName, \r\n                    userImg: response.data.userImg, \r\n                    _id: response.data._id\r\n                }\r\n                dispatch({type:\"LOG_USER\", payload: userCheck})\r\n            }catch(error) {\r\n                console.error(error)\r\n               return  dispatch({type:'LOG_OUT' })\r\n            }\r\n        }\r\n    },\r\n    getCountries: () => {\r\n        return async (dispatch, getState) => {\r\n            try{\r\n                const response = await axios.get('https://restcountries.com/v2/all?fields=name')\r\n                dispatch({type: 'GET_ALL_COUNTRIES', payload: response.data})\r\n            } catch(error){\r\n                console.error(error)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default usersActions\r\n","import React from 'react'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport usersActions from '../redux/actions/usersActions';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nfunction Dropdown(props) {\r\n    const userIcon = \"/assets/account_circle_white_36dp.svg\"\r\n\r\n    const {firstName, lastName,userImg} = props\r\n\r\n    const imgUser =( \r\n      userImg ? \r\n      {img:<div style={{padding: '.1rem', backgroundColor: 'gray', borderRadius: '50%'}}><img src={userImg} className='img-user' alt=\"Profile user icon\"/></div>}\r\n      :\r\n      {\r\n        img: <img src={userIcon} alt=\"Profile user icon\"/>\r\n    })\r\n\r\n    const Alert = Swal.mixin({\r\n      toast: true,\r\n      position: 'bottom-end',\r\n      showConfirmButton: false,\r\n      timer: 3000,\r\n      timerProgressBar: true,\r\n      didOpen: toast => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n      }\r\n    })\r\n\r\n    const onLogOut = (e) => {\r\n        e.preventDefault()\r\n        props.logOut()\r\n        Alert.fire({\r\n          icon: 'success',\r\n           title: 'You have been succesfully logged out!'\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <NavDropdown title={imgUser.img} id=\"nav-dropdown\" menuVariant=\"dark\">\r\n          {firstName? <> \r\n            <NavDropdown.Item as={Link} to=\"/\" eventKey=\"0\">{ firstName + \" \" + lastName }</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={(e) => onLogOut(e)} eventKey=\"1\">Log Out</NavDropdown.Item>\r\n          </>\r\n          :\r\n          <>\r\n            <NavDropdown.Item as={Link} to=\"/signin\" eventKey=\"1\">Sign in</NavDropdown.Item>\r\n            <NavDropdown.Item as={Link} to=\"/signup\" eventKey=\"2\">Sign Up</NavDropdown.Item>\r\n          </>\r\n          }\r\n        </NavDropdown>\r\n    );\r\n  }\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    firstName: state.users.firstName,\r\n    lastName: state.users.lastName,\r\n    userImg: state.users.userImg\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  logOut: usersActions.logOut\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dropdown);\r\n","import React from 'react';\r\nimport Dropdown from './Dropdown.js';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n\r\n    const logo = \"/assets/mytinerary_logo.png\";\r\n\r\n    return (\r\n        <div className='Header'>\r\n            <header className=\"header-style\">\r\n                <div className=\"header-logo\">\r\n                <Link className=\"link\" to=\"/\"><img src={logo} alt=\"Logo MyTinerary\"/></Link>\r\n                    \r\n                </div>\r\n                <nav className=\"header-nav\">\r\n                    <Link className=\"link\" to=\"/\">Home</Link>\r\n                    <Link className=\"link\" to=\"/cities\">Cities</Link>\r\n                </nav>\r\n                <div>\r\n                    <div className=\"user\">\r\n                        <Dropdown/>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Footer = () => {\r\n    \r\n    const [logo, ig, fb, tw] = [\r\n        \"/assets/mytinerary_logo.png\",\r\n        \"/assets/instagram.png\",\r\n        \"/assets/facebook.png\",\r\n        \"/assets/twitter.png\",\r\n    ];\r\n\r\n    return (\r\n        <footer className=\"Footer\">\r\n            <div className=\"cont-nav-socials\">\r\n                <div className=\"footer-nav\">\r\n                    <div className=\"footer-logo\">\r\n                        <Link className=\"link\" to=\"/\"><img src={logo} alt=\"Logo MyTinerary\"/></Link>\r\n                    </div>\r\n                    <nav>\r\n                        <Link className=\"link\" to=\"/\">Home</Link>\r\n                        <Link className=\"link ms-4\" to=\"/cities\">Cities</Link>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"socials\">\r\n                    <nav>\r\n                        <a href=\"https://www.instagram.com\" target=\"_new\"><img src={ig} alt=\"logo instagram\"/></a>\r\n                        <a href=\"https://www.facebook.com\" target=\"_new\"><img src={fb} alt=\"logo facebook\"/></a>\r\n                        <a href=\"https://www.twitter.com\" target=\"_new\"><img src={tw} alt=\"logo twitter\"/></a>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n            <div className=\"copy\">\r\n                <p>All rights reserved &copy; Schubert, Ernesto</p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';   \r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react.js\";\r\nimport 'swiper/swiper.scss';\r\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y, Autoplay } from 'swiper';\r\nimport 'swiper/modules/navigation/navigation.scss';\r\nimport 'swiper/modules/scrollbar/scrollbar.scss';\r\nimport 'swiper/modules/pagination/pagination.scss';\r\n\r\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y, Autoplay])\r\n\r\n\r\n\r\nconst CarouselSwiper = (props) => {\r\n  \r\n  const cities = props.cities;\r\n\r\n  const sliders = cities.map( (city, index) => {\r\n    return (\r\n          <SwiperSlide key={index} className=\"slide city-cont\">\r\n          {city.map((data) => {\r\n            return (\r\n                <div className=\"city-img\" key={data.id} style={{backgroundImage: `URL(${data.src})`, backgroundSize: 'cover'}} >\r\n                  <h3>{data.city + \" - \" + data.country}</h3>  \r\n                </div>  \r\n              );\r\n            })}\r\n          </SwiperSlide>\r\n        )\r\n      })\r\n  \r\n  return (\r\n      <div className=\"carousel-container\">\r\n        <Swiper\r\n          spaceBetween={30}\r\n          slidesPerView={1}\r\n          navigation\r\n          autoplay={{\r\n            delay: 5000,\r\n            disableOnInteraction: false,\r\n          }}\r\n          pagination={{ clickable: true }}\r\n          scrollbar={{ draggable: true }}\r\n          // onSlideChange={() => console.log(\"slide change\")}\r\n          // onSwiper={(swiper) => console.log(swiper)}\r\n        >\r\n\r\n            {sliders}\r\n\r\n        </Swiper>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default CarouselSwiper; \r\n","import React from \"react\";\r\nimport CarouselSwiper from \"./Carouselswiper\";\r\n\r\nconst cities = [\r\n[\r\n    {\r\n    id: 1,\r\n    city: \"Mykonos\",\r\n    country: \"Grecee\",\r\n    src: \"./assets/mykonos.jpg\",\r\n    },\r\n    {\r\n    id: 2,\r\n    city: \"Cancun\",\r\n    country: \"Mexico\",\r\n    src: \"./assets/cancun.jpeg\",\r\n    },\r\n    {\r\n    id: 3,\r\n    city: \"Pamukkale\",\r\n    country: \"Turkey\",\r\n    src: \"./assets/pamukkale.jpg\",\r\n    },\r\n    {\r\n    id: 4,\r\n    city: \"Abu Dhabi\",\r\n    country: \"Arab Emirates\",\r\n    src: \"./assets/abudhabi.jpg\",\r\n    },\r\n],\r\n[\r\n    {\r\n    id: 5,\r\n    city: \"New York\",\r\n    country: \"United States\",\r\n    src: \"./assets/newyork.jpg\",\r\n    },\r\n    {\r\n    id: 6,\r\n    city: \"Barcelona\",\r\n    country: \"Spain\",    \r\n    src: \"./assets/barcelona.jpg\",\r\n    },\r\n    {\r\n    id: 7,\r\n    city: \"London\",\r\n    country: \"England\",\r\n    src: \"./assets/london.jpg\",\r\n    },\r\n    {\r\n    id: 8,\r\n    city: \"Hong Kong\",\r\n    country: \"China\",\r\n    src: \"./assets/hongkong.jpg\",\r\n    },\r\n],\r\n[\r\n    {\r\n    id: 9,\r\n    city: \"Machu Picchu\",\r\n    country: \"Peru\",\r\n    src: \"./assets/machupicchu.jpg\",\r\n    },\r\n    {\r\n    id: 10,\r\n    city: \"Isla de Pascua\",\r\n    country: \"Chile\",\r\n    src: \"./assets/isladepascua.jpg\",\r\n    },\r\n    {\r\n    id: 11,\r\n    city: \"Cairo\",\r\n    country: \"Egypt\",\r\n    src: \"./assets/cairopyramids.jpg\",\r\n\r\n    },\r\n    {\r\n    id: 12,\r\n    city: \"Rome\",\r\n    country: \"Italy\",\r\n    src: \"./assets/coliseum.jpg\",\r\n    }\r\n]\r\n]\r\n\r\nexport default function SliderRender() {\r\n    return (\r\n        <CarouselSwiper cities={cities}/>\r\n    )\r\n    \r\n}","import React from 'react';\r\nimport '../App.css';\r\nimport Header from '../components/Header.js';\r\nimport Footer from '../components/Footer.js';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport SliderRender from '../components/SliderRender';\r\n\r\n\r\nexport default class Home extends React.Component {\r\n    \r\n    render(){\r\n        const [logo, arrowDown, plane] = [\r\n            \"./assets/mytinerary_logo.png\",\r\n            \"./assets/arrow_down.svg\",\r\n            \"./assets/plane.png\"\r\n        ];\r\n        \r\n        return (\r\n\r\n                <div className=\"container-home\">\r\n                    <Header/>\r\n                    <main>\r\n                        <div className=\"main-fv\" style={{backgroundImage: 'URL(\"/assets/city_sunset.jpg\")'}}>\r\n                            <div className=\"hero-container\">\r\n                                <img src={logo} width=\"100\"  alt=\"MyTinerary Logo\"/>\r\n                                <h1 className=\"hero-h1\">Welcome to <span className=\"my\">My</span><span className=\"tine\">Tine</span><span className=\"rary\">rary</span></h1>\r\n                            </div>\r\n                            <div >\r\n                                <p className=\"hero-text fs-5\">Find your perfect trip, designed by insiders who know and love their cities!</p>\r\n                            </div>\r\n                            <div className=\"next-section\">\r\n                                <a id=\"arrowDown\" href=\"#sv\"><img src={arrowDown} width=\"40\" alt=\"Arrow down to next section\"/></a>\r\n                            </div>\r\n                            <div className=\"plane\">\r\n                                <img src={plane} alt=\"Plane img\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"sv\" className=\"main-sv\">\r\n                            <div className=\"cta-cont\">    \r\n                                <div className=\"call-to-action\" style={{backgroundImage: 'url(/assets/worldmap.jpg)'}}>\r\n                                    <p className=\"cta-text fs-4\">Choose your dreams trip!<br/> Discover all our trips </p>                             \r\n                                    <Link className=\"link\" to=\"/cities\"><Button variant=\"warning\" className=\"fs-4 p-2 ps-5 pe-5 mt-2 btn-cta\">Here</Button></Link>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container-carousel\">\r\n                                <h2 className=\"carousel-h2\">Popular MyTineraries</h2>\r\n                                <div className=\"container-slider\">\r\n                                    <SliderRender/>\r\n                                </div>\r\n                            </div>    \r\n                        </div>\r\n                        \r\n                    </main> \r\n                    <Footer/>          \r\n                </div> \r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <>\r\n            <Button variant=\"warning\" className=\"spinner\" disabled>\r\n                <Spinner\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"md\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n                />\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n            </Button>{' '}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loader;\r\n","import axios from 'axios';\r\n\r\nconst citiesActions = {\r\n    getCities: () => {\r\n        return async (dispatch, getState) => {\r\n            let res = await axios.get('https://mytinerary-schubert.herokuapp.com/api/cities')\r\n            dispatch({ type: 'GET_CITIES', payload: res.data.response })\r\n        }\r\n    },\r\n    getFiltered: (cities ,e) => {\r\n        return (dispatch, getState) => {\r\n            dispatch({type: 'GET_CITIES_FILTERED', payload:{ cities, e }})\r\n        }\r\n    },\r\n    getCity: (id) => {\r\n        return async(dispatch, getState) => {\r\n            let res = await axios.get('https://mytinerary-schubert.herokuapp.com/api/cities/'+id)\r\n            dispatch({type: 'GET_CITY', payload: res.data.response})\r\n        }\r\n    }\r\n}\r\n\r\nexport default citiesActions\r\n","import React from 'react';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader';\r\nimport { connect } from 'react-redux';\r\nimport citiesActions from '../redux/actions/citiesActions';\r\n\r\nclass Cities extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        this.props.getCities()\r\n    }\r\n\r\n        \r\n    render() {\r\n\r\n        const {cities, citiesFiltered} = this.props;\r\n\r\n        return (\r\n            <div className=\"cont\">\r\n                <Header/>\r\n                <main>\r\n                    <div className=\"cities-hero\" style={{backgroundImage: `URL(\"./assets/worldmap.jpg\")`, backgroundSize: 'cover'}}>\r\n                        <div className=\"hero-content-cities\">\r\n                            <h1>MyTinerary Trips</h1>\r\n                            <input className=\"mt-5\" type=\"search\" placeholder=\"Search by city\" onChange={(e) => this.props.getFiltered(cities , e.target.value)}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container-fluid container-cities\">\r\n                        <div className=\"row justify-content-center m-0\">\r\n                            <h2 className=\"cities-h2 mb-3\">Cities</h2>\r\n                                {   \r\n                                    cities.length === 0 ? <Loader /> \r\n                                    : \r\n                                    citiesFiltered.length > 0 \r\n                                    ?\r\n                                    citiesFiltered.map(item => {\r\n                                        const { _id, city, country, src } = item\r\n                                        return (\r\n                                            <Link to={`/city/${_id}`} key={_id} className=\"col-10 col-lg-5 mb-4\">\r\n                                                <div className=\"cities-img p-2\"style={{backgroundImage: `URL(${src})`, backgroundSize: 'cover'}} >\r\n                                                    <h3 className=\"w-100\">{city + \" - \" + country}</h3>\r\n                                                    <Button variant=\"warning\" className=\"more-info\">More Info</Button>\r\n                                                </div>\r\n                                            </Link> \r\n                                        )\r\n                                        })\r\n                                    :\r\n                                    <div className=\"not-found\">\r\n                                        <h3>City not found</h3>\r\n                                    </div>\r\n                                }\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n                <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n            cities: state.cities.citiesArray,\r\n            citiesFiltered: state.cities.citiesFiltered\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getCities: citiesActions.getCities,\r\n    getFiltered: citiesActions.getFiltered\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities);\r\n","\r\n\r\nconst Activities = (props) => {\r\n\r\n    const {activities} = props\r\n    \r\n    return<>\r\n        <h2>Activities</h2>\r\n        <div className=\"act-cont\">\r\n        {\r\n            activities.map(activity => {\r\n                return<div className=\"activity-style\" key={activity._id}>\r\n                    <h4 className=\"mb-1 d-flex justify-content-center align-items-center\">{activity.activityTitle}</h4>\r\n                    <img src={activity.activityImg} alt=\"Activity\"/>\r\n                </div>\r\n            })\r\n        }\r\n        </div>\r\n    </>\r\n}\r\n\r\n\r\nexport default Activities;\r\n","import axios from \"axios\";\r\n\r\nconst itinerariesActions = {\r\n    getCityItineraries: (id) => {\r\n        return async(dispatch, getState) => {\r\n            const res = await axios.get(`https://mytinerary-schubert.herokuapp.com/api/itineraries/city/${id}`)\r\n            dispatch({type: 'GET_CITY_ITINERARY', payload: res.data.response})\r\n        }\r\n    },\r\n    getItineraryActivities: (id) => {\r\n        return async () => {\r\n            try {\r\n                const response = await axios.get(`https://mytinerary-schubert.herokuapp.com/api/activities/itinerary/${id}`)\r\n                const data = response.data.response\r\n                return data\r\n            } catch (error){\r\n                return {\r\n                    success: false, response: error\r\n                }\r\n            }\r\n        }\r\n    },\r\n    likeItinerary: (id, token) =>{\r\n        return async () => {\r\n                try{\r\n                    const response = await axios.put(`https://mytinerary-schubert.herokuapp.com/api/itinerary/like/${id}`, {},{\r\n                        headers:{\r\n                            Authorization: `Bearer ${token}`\r\n                        }\r\n                    })\r\n                    return response\r\n                } catch(error) {\r\n                    console.error(error)\r\n                }\r\n        }\r\n    },    \r\n    sendComment: (commentInfo)=>{\r\n        return async() => {\r\n            const response = await axios.post('https://mytinerary-schubert.herokuapp.com/api/itinerary/comments', commentInfo)\r\n            return response\r\n        }\r\n    },\r\n    deleteComment: (IDs)=> {\r\n        return async() => {\r\n            const response = await axios.delete('https://mytinerary-schubert.herokuapp.com/api/itinerary/comments', {data: IDs}) \r\n            return response.data.response\r\n        }\r\n    },\r\n    editComment: (itineraryId, commentInfo)=> {\r\n        return async() => {\r\n            const response = await axios.put('https://mytinerary-schubert.herokuapp.com/api/itinerary/comments/' + itineraryId, commentInfo )\r\n            return response.data.response\r\n        }\r\n    }\r\n}\r\n\r\nexport default itinerariesActions;","import { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faPaperPlane} from '@fortawesome/free-solid-svg-icons'\r\nimport {FaTrashAlt} from \"react-icons/fa\"\r\nimport {FaRegEdit} from \"react-icons/fa\"\r\nimport {IoSend} from 'react-icons/io5'\r\nimport itinerariesActions from '../redux/actions/itinerariesActions';\r\nimport {toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\ntoast.configure()\r\n\r\nconst Comments = (props)=>{\r\n    const {itineraryId, userLogged, itineraryComments} = props\r\n\r\n\r\n    const [allComments, setAllComments] = useState(itineraryComments);\r\n    const [commentContent, setCommentContent] = useState('');\r\n    const [isEditingComment, setIsEditingComment] = useState(false);\r\n    const [editedComment, setEditedComment] = useState('');\r\n    const [commentBeingEdited, setCommentBeingEdited] = useState('');\r\n\r\n    const sendComment = async() => {\r\n        if(commentContent !== ''){\r\n            setCommentContent('')\r\n            const response = await props.sendComment({ userId: userLogged._id, comment: commentContent, itineraryId}) \r\n            setAllComments(response.data.response)\r\n        }\r\n    }\r\n        \r\n    const deleteSingleComment_ = async(IDs)=>{\r\n        const response = await props.deleteComment(IDs)\r\n        setAllComments(response)\r\n    }\r\n    \r\n\r\n    const deleteSingleComment = async(IDs)=>{\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You are going to delete your comment!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteSingleComment_(IDs)\r\n                Swal.fire(\r\n                    'Deleted!',\r\n                    'Your comment has been deleted',\r\n                    'success'\r\n                    )\r\n                }\r\n        })\r\n    }\r\n\r\n    const startEditingComment = (value, commentId)=>{\r\n        setIsEditingComment(!isEditingComment)\r\n        setEditedComment(value)\r\n        setCommentBeingEdited(commentId)\r\n    }\r\n\r\n    const sendEditedComment = async(itineraryId, commentInfo)=>{\r\n        setIsEditingComment(!isEditingComment)\r\n        const response = await props.editComment(itineraryId, commentInfo)\r\n        setAllComments(response)\r\n    }\r\n\r\n\r\n    const notify = (error)=>{\r\n        toast.error(`Must be logged to ${error}!`)\r\n    }\r\n\r\n   return<>\r\n\r\n        <div className=\"comments-general-container\">\r\n            <div className=\"commentsTittle-container\">\r\n                <h1 className=\"commentsTittle\">Comments</h1>\r\n            </div>\r\n            <div className=\"all-comments-container\">\r\n                {allComments.map((comment, i) => {\r\n                    return (\r\n                        <div className=\"comment\" key={i}>\r\n                        <div className=\"x-alineator\">\r\n                            <div>\r\n                                <div className=\"authorComment-img\" style={{backgroundImage: `url(${comment.userImg})`}} ></div>\r\n                            </div>\r\n                            <div className=\"commentContent-container\">\r\n                                \r\n                            \r\n                            \r\n                                <p className={userLogged ? comment.userId === userLogged._id \r\n                                    ? !isEditingComment ? \"comment-author\" : \"displayNone\"\r\n                                    : \"comment-author\" \r\n                                : \"comment-author\"}>\r\n                                    <strong> {comment.userName}</strong>\r\n                                </p>\r\n                                \r\n                                <p className={ userLogged ? comment.userId === userLogged._id\r\n                                    ? !isEditingComment ? \"comment-content\" : \"displayNone\"\r\n                                    : \"comment-content\"\r\n                                : \"comment-content\"\r\n                                } >{comment.comment}</p>\r\n                                \r\n                                {userLogged && comment.userId === userLogged._id && (\r\n                                    <>\r\n                                    <input type=\"text\" \r\n                                    value={commentBeingEdited === comment._id ? editedComment : comment.comment}\r\n                                    onChange={(e)=> setEditedComment(e.target.value)} className={isEditingComment ? \"editingInput\": \"displayNone\"} />\r\n                                    <IoSend className={isEditingComment ? \"sendEditedIcon\": \"displayNone\"} \r\n                                    onClick={()=>\r\n                                        sendEditedComment(itineraryId, {commentId: comment._id, newComment: editedComment})} />\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n\r\n                            {userLogged && comment.userId === userLogged._id && (\r\n                                <div className=\"modifyCommentIcons-container\">\r\n                                    <FaRegEdit  onClick={()=> startEditingComment(comment.comment, comment._id)} className={!isEditingComment ? \"edit-icon\" : \"displayNone\"} />\r\n                                    <FaTrashAlt onClick={()=> deleteSingleComment({itineraryId: itineraryId, commentId: comment._id})} className={!isEditingComment ? \"delete-icon\" : \"displayNone\"}/>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n                <div className=\"input-container\">\r\n                    <input type=\"text\" value={commentContent} onChange={(e)=> setCommentContent(e.target.value)} className=\"comments-input\" placeholder=\"Send comment\" />\r\n                    \r\n                    <div className=\"paperPlane-icon\" onClick={userLogged ? sendComment : () => notify('Comment')}>\r\n                        <FontAwesomeIcon icon={faPaperPlane} />\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n   return {\r\n      userLogged: state.users.user\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n   sendComment: itinerariesActions.sendComment,\r\n   deleteComment: itinerariesActions.deleteComment,\r\n   editComment: itinerariesActions.editComment\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments)\r\n\r\n","import Swal from \"sweetalert2\"\r\n\r\nconst Alert = (icon, title) => {\r\n    const toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'bottom-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: true,\r\n    didOpen: toast => {\r\n            toast.addEventListener('mouseenter', Swal.stopTimer)\r\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n        }\r\n    })\r\n\r\n    toast.fire({\r\n        icon: icon,\r\n        title: title\r\n    })\r\n}\r\n\r\nexport default Alert;\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Activities from './Activities';\r\nimport { connect } from 'react-redux';\r\nimport itinerariesActions from '../redux/actions/itinerariesActions';\r\nimport Comments from './Comments';\r\nimport Alert from './Alert';\r\n\r\nconst Itineraries = (props) => {\r\n\r\n    const {id} = useParams()\r\n    const {_id, src, firstName, lastName, likes, title, price, duration, hastags, comments} = props.itinerary;\r\n    const [viewMoreLess, setViewMoreLess] = useState(false);\r\n    const [activity, setActivities] = useState([]);\r\n    const [like, setLike] = useState(false);\r\n    const [itinerariesLikes, setItinerariesLikes] = useState(likes);\r\n    const likeOrDislike = itinerariesLikes.includes(props._id) ? '/assets/heart-red.png' : '/assets/heart.png';\r\n\r\n    async function getActivities() {\r\n        try {\r\n            let res = await props.getItineraryActivities(_id)\r\n            if(res) {\r\n                setActivities(res)\r\n            }\r\n        } catch(err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const handlerActivities = () => {\r\n        setViewMoreLess(!viewMoreLess)\r\n        getActivities()\r\n    }\r\n\r\n    const likeItinerary = async () => {\r\n        if(!props.token){\r\n            Alert('error', 'You must be logged in to like this post')\r\n        }else{\r\n            let response = await props.likeItinerary(_id, props.token)\r\n            setItinerariesLikes(response.data.response)\r\n        }\r\n        setLike(true)\r\n    }\r\n\r\n    return (\r\n        <div key={_id} className=\"itineraries-container mb-2 mt-2\">\r\n            <div className=\"cont-likes-publisher\">\r\n                <div className=\"publisher mb-2\">\r\n                    <div className=\"img-bg\">\r\n                        <img src={src} className='publisher-img' alt=\"publisher profile\"/>\r\n                    </div>\r\n                    <h5 className=\"ms-3 italic-shadow linkedin-logo\">\r\n                        <a href=\"https://www.linkedin.com/\" target=\"_new\" className=\"ms-2 d-flex align-items-center\">\r\n                            {firstName + \" \" + lastName}\r\n                            <img src=\"/assets/linkedin.png\" alt=\"linkedin logo\" className=\"ms-2\"/>\r\n                        </a>\r\n                    </h5>\r\n                </div>\r\n                <div className=\"ms-4\">\r\n                    <div className=\"likes\">\r\n                        <img onClick={!like ? likeItinerary : null} \r\n                            src={likeOrDislike}\r\n                            className='like-heart'\r\n                            alt='heart'\r\n                        />\r\n                        <span className=\"cont-likes\">\r\n                            {likes.length === 1? likes : likes.length - 1}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"cont-info-it\">\r\n                <div>\r\n                    <h2 className=\"mb-5 mt-2 h2-title-itine italic-shadow\">{title}</h2>\r\n                </div>\r\n                <div className=\"it-info\">\r\n                    <p className=\"italic-shadow\">\r\n                        Price: {(\"💸\").repeat(price)}\r\n                    </p>\r\n                    <p className=\"italic-shadow\">\r\n                        Duration: {(\"⏱️\").repeat(duration)}\r\n                    </p>\r\n                    <p className=\"italic-shadow\">\r\n                        Hastags: {hastags.map((hastag, index) => {\r\n                            return <a href={`/city/${id}`} key={index} className=\"ms-2\">{hastag}</a>\r\n                        })}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <Accordion defaultActiveKey=\"0\" className=\"mt-4\">\r\n                <Accordion.Item eventKey=\"1\">\r\n                    <Accordion.Header onClick={() => handlerActivities()}>\r\n                        { viewMoreLess ?  \"View less\" : \"View more\"}\r\n                    </Accordion.Header>\r\n                        <Accordion.Body className='cont-act-comments'>\r\n                            <div className=\"itinerary-div\">\r\n                                <Activities activities={activity} />\r\n                                <Comments itineraryId={_id} itineraryComments={comments}/>\r\n                            </div>\r\n                        </Accordion.Body>\r\n                </Accordion.Item>\r\n            </Accordion>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.users.token,\r\n        _id: state.users._id,\r\n        user: state.users.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getItineraryActivities: itinerariesActions.getItineraryActivities,\r\n    likeItinerary: itinerariesActions.likeItinerary,\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Itineraries);\r\n","import React from 'react';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Loader from '../components/Loader';\r\nimport Itineraries from '../components/Itineraries';\r\nimport { connect } from 'react-redux';\r\nimport citiesActions from '../redux/actions/citiesActions';\r\nimport itinerariesActions from '../redux/actions/itinerariesActions';\r\n\r\nclass City extends React.Component {    \r\n\r\n    id = this.props.params.id\r\n\r\n    componentDidMount() {\r\n        this.props.getCities();\r\n        this.props.getCity(this.id);\r\n        this.props.getCityItineraries(this.id);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { cities, itinerary, city } = this.props\r\n        \r\n        return (   \r\n         <>\r\n            <Header />\r\n            <main className=\"d-flex justify-content-center align-center\">\r\n                <div className=\"hero-city\" key={city._id} style={{backgroundImage: `URL(${city.src})`, backgroundSize: 'cover'}}>\r\n                    <div className=\"place-cont\">\r\n                        <h1>{ city.city === undefined ? <Loader /> : city.city }</h1>\r\n                        <p>{ city.country }</p>\r\n                    </div>\r\n                </div>\r\n                <h2 className=\"itine-h2 italic-shadow mb-3\">Itineraries</h2>\r\n\r\n                {   cities.length === 0 ? <Loader /> :\r\n                    itinerary.length > 0 ?\r\n                    itinerary.map((itine, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                <Itineraries itinerary={itine}/>\r\n                            </div>\r\n                        )\r\n                    })\r\n                    :\r\n                    <div className=\"no-itine\">\r\n                        <h4>There are no itineraries yet for {city.city}</h4>\r\n                        <img src=\"/assets/comingsoon.png\" alt =\"coming soon\"/>\r\n                    </div>\r\n                }\r\n\r\n                <Link to=\"/cities\" className=\"mb-4 mt-4\"><Button variant=\"warning\">Go back Cities</Button></Link>\r\n            </main>\r\n            <Footer />\r\n         </>           \r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cities: state.cities.citiesArray,\r\n        city: state.cities.city,\r\n        itinerary: state.itineraries.itinerary\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getCities: citiesActions.getCities,\r\n    getCity: citiesActions.getCity,\r\n    getCityItineraries: itinerariesActions.getCityItineraries\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(City);\r\n","import React, { useState } from 'react'\r\n\r\nconst PasswordToggle = () => {\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const hideViewIcon = <img src={ visible ?  '/assets/hidden.png' : '/assets/view.png'} onClick={() => setVisible(visible => !visible)} alt=\"visibility icon\"/>\r\n\r\n    const inputType = visible ? \"text\" : \"password\";\r\n\r\n    const placeholderText = visible ? \"password\" : \"******\";\r\n\r\n    return [inputType, hideViewIcon, placeholderText]\r\n}\r\n\r\nexport default PasswordToggle;\r\n","import { useState } from 'react';\r\nimport Header from \"../components/Header\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport usersActions from \"../redux/actions/usersActions\";\r\nimport PasswordToggle from '../components/PasswordToggle';\r\nimport GoogleLogin from 'react-google-login';\r\nimport Alert from '../components/Alert';\r\n\r\nconst SignIn = (props) => {\r\n\r\n    const [inputType, hideViewIcon, placeholderText] = PasswordToggle();\r\n\r\n    const [logInUser, setLogInUser] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const inputHandler = (e) => {\r\n        setLogInUser({\r\n            ...logInUser,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        let info = Object.values(logInUser).some(infoUser => infoUser === \"\")\r\n        if(info) {\r\n            Alert('error', 'There are fields incomplete, please complete them')\r\n        } else {\r\n            props.signInUser(logInUser)\r\n            .then(response => {\r\n                if(!response.data.success) {\r\n                   Alert('error', 'Email or password incorrect')\r\n                } else {\r\n                    Alert('success', 'Welcome! You have been successfully logged')\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                Alert('error', 'Email or password incorrect')\r\n            })\r\n        }\r\n    }\r\n\r\n    const responseGoogle = (res) => {\r\n        let googleUser = {\r\n            email: res.profileObj.email, \r\n            password: res.profileObj.googleId,\r\n            google: true,\r\n        }\r\n        props.signInUser(googleUser)\r\n        .then((response) => {\r\n            if (response.data.success){\r\n                Alert('success', 'Welcome! You have been successfully logged')\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n            Alert('error', 'You have to sign up before you log in!')\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n                <main className=\"signup-container\">\r\n                    <div className=\"cont-form\">\r\n                            <h1 className=\"mb-4\">Sign In</h1>\r\n                            <form className=\"form-style\">\r\n                                <input type=\"text\" name=\"email\" onChange={inputHandler} placeholder=\"Username or email\"/>\r\n                                <span className='password-toggle-icon'>{hideViewIcon}\r\n                                <input type={inputType} name=\"password\" onChange={inputHandler} placeholder={placeholderText} autoComplete={inputType === 'text' ? 'off': 'nope'}/>\r\n                                </span>\r\n                                <button onClick={(e) => onSubmit(e)} className=\"mt-2 ps-4 pe-4 btns\">Sign In</button>\r\n                                <p>or</p>\r\n                                <span className='google-btn mt-2 mb-2'><GoogleLogin\r\n                                    clientId='988627387814-jdnopntr6b8l3s5k0d2n9cjgkdnjbnsd.apps.googleusercontent.com'\r\n                                    buttonText=\"Sign Up with Google\"\r\n                                    onSuccess={responseGoogle}\r\n                                    onFailure={responseGoogle}\r\n                                    cookiePolicy={'single_host_origin'}\r\n                                /></span>\r\n                            </form>\r\n                            <div> \r\n                                <p>Don't you have an account yet? <Link to=\"/signup\"> Sign Up</Link></p> \r\n                            </div>\r\n                    </div>\r\n                </main>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    signInUser: usersActions.signInUser\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n","import { useEffect, useState } from 'react';\r\nimport Header from \"../components/Header\";\r\nimport { Link } from 'react-router-dom';\r\nimport usersActions from '../redux/actions/usersActions';\r\nimport { connect } from 'react-redux';\r\nimport PasswordToggle from '../components/PasswordToggle';\r\nimport GoogleLogin from 'react-google-login';\r\nimport Alert from '../components/Alert';\r\n\r\nconst SignUp = (props) => {\r\n\r\n    const [inputType, hideViewIcon, placeholderText] = PasswordToggle();\r\n    \r\n    const { getCountries } = props;\r\n\r\n    useEffect(() => {\r\n      getCountries()\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    \r\n    const { allCountries } = props;\r\n\r\n    const [newUser, setNewUser] = useState({\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: '',\r\n      userImg: '',\r\n      country: '',\r\n    })\r\n    \r\n    const inputHandler = (e) => {\r\n      setNewUser({\r\n        ...newUser,\r\n        [e.target.name]: e.target.value\r\n      })\r\n    }\r\n    const [ errorInput, setErrorInput ] = useState({})\r\n    \r\n    const onSubmit = (e) => {\r\n      e.preventDefault()\r\n      let info = Object.values(newUser).some(infoUser => infoUser === '')\r\n      if(info) {\r\n        Alert('error', 'There are fields incomplete, please complete them')\r\n      } else {\r\n        props.signUpUser(newUser)\r\n        .then(response => {\r\n          console.log(response)\r\n          if(response.data.success) {\r\n              Alert('success', 'Your account has been created!')\r\n          } else if (response.data.errors) {\r\n            setErrorInput({})\r\n            response.data.errors.map(error => setErrorInput(messageError => {\r\n              return {\r\n                ...messageError,\r\n                [error.path]: error.message\r\n              }\r\n            }))\r\n          } else {\r\n              Alert('error',  'That email has already been used! Try with another one')\r\n            }\r\n            })\r\n        .catch(error => {\r\n          console.log(error)\r\n          Alert('error', 'We are having technicas difficulties! Come back later!')\r\n        })\r\n          }\r\n        }\r\n        \r\n        const responseGoogle = (res) => {\r\n          const googleUser = {\r\n            firstName: res.profileObj.givenName,\r\n            lastName: res.profileObj.familyName,\r\n            email: res.profileObj.email,\r\n            password: res.profileObj.googleId,\r\n            userImg: res.profileObj.imageUrl,\r\n            country: ' ',\r\n            googleAccount: true\r\n          }\r\n          props.signUpUser(googleUser)\r\n          .then((response) => {\r\n            if (response.data.success){\r\n              Alert('success', 'Your account has been created!')\r\n            }\r\n            else{\r\n              setErrorInput(response.data.error)\r\n              Alert('error', 'Something went wrong! Come back later!')\r\n            }\r\n          })\r\n          .catch((error) => {\r\n                console.log(error)\r\n                Alert('error', 'This account is already in use.')\r\n            })\r\n        }\r\n            \r\n            return (\r\n              <>\r\n              <Header />\r\n                  <main className=\"signup-container\">\r\n                      <div className=\"cont-form\">\r\n                          <h1 className=\"mb-3\"> Sign Up</h1>\r\n                          <form className=\"form-style\">\r\n                              <input type=\"text\" onChange={inputHandler} name=\"firstName\" placeholder=\"First Name\"/>\r\n                              <input type=\"text\" onChange={inputHandler} name=\"lastName\" placeholder=\"Last Name\"/>\r\n                              <input type=\"email\" onChange={inputHandler} name=\"email\" placeholder=\"email@email.com\"/>\r\n                              <p className='text-danger'>{errorInput.email}</p>\r\n                              <span className='password-toggle-icon'>{hideViewIcon}\r\n                              <input type={inputType} onChange={inputHandler} name=\"password\" placeholder={placeholderText} autoComplete={inputType === 'text' ? 'off': 'nope'}/>\r\n                              <p className='text-danger'>{errorInput.password}</p>\r\n                              </span>\r\n                              <input type=\"url\" onChange={inputHandler} name=\"userImg\" placeholder=\"URL Profile Image\" />\r\n                              <select  defaultValue=\"choose your country\" onChange={inputHandler} name=\"country\" id=\"select-state\">\r\n                                  <option disabled value=\"choose your country\">Choose your country</option>\r\n                                  {   \r\n                                      typeof(allCountries) === \"object\" ?\r\n                                      allCountries.map((country, index) => {\r\n                                        return <option key={index} value={country.name}>{country.name}</option>\r\n                                      })\r\n                                      :\r\n                                      <option>Loading...</option>\r\n                                    }\r\n                              </select>\r\n                              <button onClick={(e) => onSubmit(e)} className=\"mt-2 ps-4 pe-4 btns\">Create account</button>\r\n                              <p>or</p>\r\n                              <span className='google-btn mt-2 mb-2'><GoogleLogin\r\n                                      clientId='988627387814-jdnopntr6b8l3s5k0d2n9cjgkdnjbnsd.apps.googleusercontent.com'\r\n                                      buttonText=\"Sign Up with Google\"\r\n                                      onSuccess={responseGoogle}\r\n                                      onFailure={responseGoogle}\r\n                                      cookiePolicy={'single_host_origin'}\r\n                                      /></span>\r\n                          </form>\r\n                          <div> \r\n                              <p>Already has an account? <Link to=\"/signin\"> Sign In</Link></p> \r\n                          </div>\r\n                      </div>\r\n\r\n                  </main>\r\n          </>\r\n      )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    firstName : state.users.firstName,\r\n    lastName: state.users.lastName,\r\n    userImg: state.users.userImg,\r\n    email: state.users.email,\r\n    allCountries: state.users.allCountries\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  signUpUser: usersActions.signUpUser,\r\n  getCountries: usersActions.getCountries\r\n}\r\n    \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n  \r\n  ","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = () => {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n\r\n}\r\n\r\nexport default ScrollToTop;","import { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nexport function withRouter( Child) {\r\n    return (props) => {\r\n        const location = useLocation();\r\n        const navigate = useNavigate();\r\n        const params = useParams();\r\n        return <Child {...props} navigate={ navigate } location={ location } params={ params }/>\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css'\r\nimport Home from './pages/Home.js';\r\nimport Cities from './pages/Cities.js';\r\nimport CityWithoutProps from './pages/City';\r\nimport SignIn from './pages/SignIn';\r\nimport SignUp from './pages/SignUp';\r\nimport { withRouter} from './utils/withRouter';\r\nimport ScrollToTop from './components/ScrollToTop';\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n  Navigate\r\n} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport usersActions from './redux/actions/usersActions';\r\n\r\n\r\nconst City = withRouter(CityWithoutProps)\r\n\r\nconst App = (props) => {\r\n\r\n  const { signInUserLS } = props\r\n  useEffect(()=>{\r\n    if(localStorage.getItem('token')){\r\n        signInUserLS(localStorage.getItem('token'))\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[])\r\n\r\n  return (\r\n    <BrowserRouter>\r\n    <ScrollToTop />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"cities\" element={<Cities />} />\r\n          <Route path=\"city/:id\" element={<City />} />\r\n        \r\n        {!props.token && (<Route path=\"signin\" element={<SignIn />}/>)}\r\n        {!props.token && (<Route path=\"signup\" element={<SignUp/>}/>)}\r\n\r\n        <Route path=\"*\" element={<Navigate to=\"/\"/>} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n)};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n      token: state.users.token\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  signInUserLS: usersActions.signInUserLS\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","\r\n\r\nconst citiesReducer = (state = {citiesArray: [], citiesFiltered: [], city: {}}, action) => {\r\n    if(action.type === 'GET_CITIES'){\r\n        return {\r\n            ...state,\r\n            citiesArray: action.payload,\r\n            citiesFiltered: action.payload\r\n        }\r\n    } else if (action.type === 'GET_CITIES_FILTERED'){\r\n        const { cities, e } = action.payload\r\n        const filtered = cities.filter(item => item.city.toLowerCase().trim().startsWith(e.toLowerCase().trim())) \r\n        return {\r\n            ...state,\r\n            citiesFiltered: filtered\r\n        }\r\n    } else if (action.type === 'GET_CITY'){\r\n        return {\r\n            ...state,\r\n            city: action.payload\r\n        }\r\n    } else {\r\n        return state\r\n    }\r\n}\r\n\r\nexport default citiesReducer;\r\n","const itinerariesReducer = (state = {itinerary: []}, action) => {\r\n\r\n    if(action.type === \"GET_CITY_ITINERARY\") {\r\n        return {\r\n            ...state,\r\n            itinerary: action.payload\r\n        }\r\n    }\r\n    else {\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default itinerariesReducer;\r\n","const usersReducer = (state = {userImg: null, user: null, firstName: null, lastName: null, email: null, token: null, _id: null, allCountries: []}, action) => {\r\n    if(action.type === 'LOG_USER') {\r\n        localStorage.setItem('token', action.payload.token);\r\n        return {\r\n            ...state,\r\n            user: action.payload,\r\n            token: action.payload.token,\r\n            userImg : action.payload.userImg,\r\n            firstName : action.payload.firstName,\r\n            lastName : action.payload.lastName,\r\n            email: action.payload.email,\r\n            _id: action.payload._id\r\n        }\r\n    } else if(action.type === 'LOG_OUT'){\r\n        localStorage.clear()\r\n        return {\r\n            token: null,\r\n            userImg : null,\r\n            firstName : null,\r\n            lastName : null,\r\n            email: null,\r\n            _id: null\r\n        }\r\n    } else if(action.type === 'GET_ALL_COUNTRIES'){\r\n        return {\r\n            allCountries: action.payload,\r\n        }\r\n    } else {\r\n        return state\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport citiesReducer from \"./citiesReducer\";\r\nimport itinerariesReducer from \"./itinerariesReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    cities: citiesReducer,\r\n    itineraries: itinerariesReducer,\r\n    users: usersReducer,\r\n})\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './redux/reducers/rootReducer';\r\n\r\nconst reduxStore = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nReactDOM.render(\r\n    <Provider store={reduxStore}>\r\n      <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}